name: Flutter APK Distribution

on:
  release:
    types: [created, published]
  workflow_dispatch:
    inputs:
      destination:
        description: 'Destination for the APK'
        required: true
        default: 'github-release'
        type: choice
        options:
          - github-release
          - store-internal
          - store-alpha
          - store-beta

jobs:
  build-and-distribute:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.x'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build APK
        run: flutter build apk --release
      
      - name: Sign APK
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: build/app/outputs/flutter-apk
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          signingOptionsArgs: --out build/app/outputs/flutter-apk/app-release-signed.apk
      
      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: signed-release-apk
          path: build/app/outputs/flutter-apk/app-release-signed.apk
          retention-days: 30
        
      - name: Create or Update GitHub Release
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.destination == 'github-release' || github.event_name == 'release' }}
        uses: softprops/action-gh-release@v1
        with:
          files: build/app/outputs/flutter-apk/app-release-signed.apk
          tag_name: ${{ github.event_name == 'release' && github.ref_name || format('v1.0.{0}-manual', github.run_number) }}
          name: ${{ github.event_name == 'release' && github.event.release.name || format('Manual Release v1.0.{0}', github.run_number) }}
          body: ${{ github.event_name == 'release' && github.event.release.body || 'APK built and signed by GitHub Actions' }}
          draft: ${{ github.event_name != 'release' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set Google Play Track
        id: play_track
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.destination != 'github-release' }}
        run: |
          TRACK="${{ github.event.inputs.destination }}"
          # Convert store-xxx to just xxx
          TRACK="${TRACK#store-}"
          echo "track=$TRACK" >> $GITHUB_OUTPUT
      
      - name: Upload to Google Play
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.destination != 'github-release' }}
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
          packageName: com.example.pet_care
          releaseFiles: build/app/outputs/flutter-apk/app-release-signed.apk
          track: ${{ steps.play_track.outputs.track }}
          status: completed 